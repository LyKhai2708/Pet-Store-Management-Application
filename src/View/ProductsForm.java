/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.PetProductDAO;
import Model.PetProduct;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 84896
 */
public class ProductsForm extends javax.swing.JFrame {
    String[] columm = new String[]{"Product_ID", "Product_Name", "Price_issue", "Price_sell", "Stock", "Receipt_Day" };
    DefaultTableModel table = new DefaultTableModel();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    /**
     * Creates new form ProductsForm
     */
    public ProductsForm() {
        initComponents();
        PetProductDAO productDATA = new PetProductDAO();
        ArrayList<PetProduct> list = productDATA.getAll();
        ProductTable.setModel(table);
        table.setColumnIdentifiers(columm);
        addData(list);
        addSearchBoxData();
    }
    public void addData(ArrayList<PetProduct> list) {
        for(PetProduct p : list){
            table.addRow(new String [] {p.getProduct_ID(),p.getProduct_Name(),String.valueOf(p.getPrice_issue()),String.valueOf(p.getPrice_sell()),String.valueOf(p.getStock()),String.valueOf(p.getReceipt_Day())});
        }
    }
     public void addSearchBoxData(){
         for(String o : columm){
             SearchBox.addItem(o);
         }
     }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddDialog = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        IDtxt = new javax.swing.JTextField();
        Nametxt = new javax.swing.JTextField();
        Stocktxt = new javax.swing.JTextField();
        Priceissuetxt = new javax.swing.JTextField();
        Priceselltxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Confirm = new javax.swing.JButton();
        Close = new javax.swing.JButton();
        Receiptdate = new com.toedter.calendar.JDateChooser();
        ScrollPane = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        Add = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        SearchBox = new javax.swing.JComboBox<>();
        Searchtxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        AddDialog.setModal(true);

        jLabel3.setText("Add Product");

        Nametxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NametxtActionPerformed(evt);
            }
        });

        jLabel4.setText("ID");

        jLabel5.setText("Price issue");

        jLabel6.setText("Name");

        jLabel7.setText("Receipt day");

        jLabel8.setText("Price sell");

        jLabel9.setText("Stock");

        Confirm.setText("Confirm");
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });

        Close.setText("Close");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        Receiptdate.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout AddDialogLayout = new javax.swing.GroupLayout(AddDialog.getContentPane());
        AddDialog.getContentPane().setLayout(AddDialogLayout);
        AddDialogLayout.setHorizontalGroup(
            AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddDialogLayout.createSequentialGroup()
                .addGroup(AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AddDialogLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Nametxt)
                            .addComponent(IDtxt)
                            .addComponent(Receiptdate, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                        .addGap(141, 141, 141)
                        .addGroup(AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddDialogLayout.createSequentialGroup()
                                .addGroup(AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AddDialogLayout.createSequentialGroup()
                                        .addComponent(Stocktxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(Priceselltxt)))
                            .addGroup(AddDialogLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Priceissuetxt))))
                    .addGroup(AddDialogLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Close)
                        .addGap(90, 90, 90)
                        .addComponent(Confirm)
                        .addGap(118, 118, 118)))
                .addGap(100, 100, 100))
            .addGroup(AddDialogLayout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AddDialogLayout.setVerticalGroup(
            AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Priceissuetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(37, 37, 37)
                .addGroup(AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Priceselltxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addGap(40, 40, 40)
                .addGroup(AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddDialogLayout.createSequentialGroup()
                        .addGroup(AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Stocktxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(AddDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Confirm)
                            .addComponent(Close))
                        .addGap(19, 19, 19))
                    .addGroup(AddDialogLayout.createSequentialGroup()
                        .addComponent(Receiptdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ScrollPane.setViewportView(ProductTable);

        Add.setText("ADD");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Delete.setText("DELETE");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Update.setText("UPDATE");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Add)
                    .addComponent(Update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(Add)
                .addGap(18, 18, 18)
                .addComponent(Update)
                .addGap(18, 18, 18)
                .addComponent(Delete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Search");

        Searchtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchtxtKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(SearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Searchtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(SearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jLabel2.setText("Product Table");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(7, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(361, 361, 361))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchtxtKeyReleased
        PetProductDAO productDATA = new PetProductDAO();
          ArrayList<PetProduct> list = productDATA.search((String)SearchBox.getSelectedItem(),Searchtxt.getText());
          table.setRowCount(0);
          addData(list);
          if(Searchtxt.getText().equals("")){
              list = productDATA.getAll();
              table.setRowCount(0);
              addData(list);
            }
    }//GEN-LAST:event_SearchtxtKeyReleased

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        AddDialog.setVisible(true);
    }//GEN-LAST:event_AddActionPerformed

    private void NametxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NametxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NametxtActionPerformed
    
    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        PetProductDAO productDATA = new PetProductDAO();
        ArrayList<PetProduct> l1st = productDATA.getbyID(IDtxt.getText());
        if(IDtxt.getText().isBlank() ||
           Nametxt.getText().isBlank() ||
                Receiptdate.getDate().equals("") || Priceissuetxt.getText().isBlank() || Priceselltxt.getText().isBlank() || Stocktxt.getText().isBlank()){
            JOptionPane.showMessageDialog(this, "Missing information");
        }else if(!l1st.isEmpty()){
            JOptionPane.showMessageDialog(this, "ID already used");
        }else {
            try{
            PetProduct pp = new PetProduct();
            pp.setProduct_ID(IDtxt.getText());
            pp.setProduct_Name(Nametxt.getText());
            pp.setPrice_issue(Float.parseFloat(Priceissuetxt.getText()));
            pp.setPrice_sell(Float.parseFloat(Priceselltxt.getText()));
            pp.setStock(Integer.parseUnsignedInt(Stocktxt.getText()));
            String date = dateFormat.format(Receiptdate.getDate());
            pp.setReceipt_Day(dateFormat.parse(date));
            int result = productDATA.insert(pp);
            if(result == 0){
                JOptionPane.showMessageDialog(this, "Add Failed!!");
            }else 
            {
                JOptionPane.showMessageDialog(this, "Add Successful!!");
                table.setRowCount(0);
                ArrayList<PetProduct> list = productDATA.getAll();
                addData(list);
            }
            }catch(Exception e){
                System.out.println("Error :" + e);
            }
        }
    }//GEN-LAST:event_ConfirmActionPerformed

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        AddDialog.setVisible(false);
    }//GEN-LAST:event_CloseActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        PetProductDAO cusDATA = new PetProductDAO();
        int row = ProductTable.getSelectedRow();
        if(row == -1){
           JOptionPane.showMessageDialog(ProductsForm.this, "Please choose product to delete!");
        }else {
            int cf = JOptionPane.showConfirmDialog(ProductsForm.this, "Are you sure to delete this product?");
            if(cf == JOptionPane.YES_OPTION) {
                String id = String.valueOf(table.getValueAt(row, 0));
                cusDATA.delete(id);
                table.setRowCount(0);
                ArrayList<PetProduct> list = cusDATA.getAll();
                addData(list);
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
    PetProductDAO productDATA = new PetProductDAO();
        int result = 0;
        for(int i = 0 ; i < table.getRowCount();i++) {
            if(table.getValueAt(i, 0).equals("") || 
            table.getValueAt(i, 1).equals("") || 
            table.getValueAt(i, 2).equals("") || 
            table.getValueAt(i, 3).equals("") || 
            table.getValueAt(i, 4).equals("") ||
            table.getValueAt(i, 5).equals("")){
            JOptionPane.showMessageDialog(ProductsForm.this,"Please enter full information");
           break;
         }else{
            try{
            PetProduct pp = new PetProduct();
            pp.setProduct_ID(String.valueOf(ProductTable.getValueAt(i, 0)));
            pp.setProduct_Name(String.valueOf(ProductTable.getValueAt(i, 1)));
            pp.setPrice_issue(Float.parseFloat(String.valueOf(ProductTable.getValueAt(i, 2))));
            pp.setPrice_sell(Float.parseFloat(String.valueOf(ProductTable.getValueAt(i, 3))));
            pp.setStock(Integer.parseInt(String.valueOf(ProductTable.getValueAt(i, 4))));
            String DateValue = String.valueOf(ProductTable.getValueAt(i,5));
            Date birth = dateFormat.parse(DateValue);
            pp.setReceipt_Day(birth);
            result = productDATA.update(pp); //result = 0 => that bai , result > 0 => thanh cong
            }catch (ParseException ex) {
            System.out.println("Error " + ex);
            }
           } 
        }
        if(result == 0 ){
          JOptionPane.showMessageDialog(ProductsForm.this,"Cannot Update");
        }else {
          JOptionPane.showMessageDialog(ProductsForm.this,"Updated!!!");
        }
        table.setRowCount(0);
        ArrayList<PetProduct> list = productDATA.getAll();
        addData(list);
    }//GEN-LAST:event_UpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JDialog AddDialog;
    private javax.swing.JButton Close;
    private javax.swing.JButton Confirm;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField IDtxt;
    private javax.swing.JTextField Nametxt;
    private javax.swing.JTextField Priceissuetxt;
    private javax.swing.JTextField Priceselltxt;
    private javax.swing.JTable ProductTable;
    private com.toedter.calendar.JDateChooser Receiptdate;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JComboBox<String> SearchBox;
    private javax.swing.JTextField Searchtxt;
    private javax.swing.JTextField Stocktxt;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
