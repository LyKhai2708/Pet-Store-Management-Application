/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.CustomersDAO;
import DAO.Detail_InvoiceDAO;
import DAO.InvoiceDAO;
import DAO.PetDAO;
import DAO.PetProductDAO;
import DAO.StaffDAO;
import Model.Customers;
import Model.Detail_Invoice;
import Model.Pet;
import Model.PetProduct;
import Model.Staff;
import Model.Invoice;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;

/**
 *
 * @author 84896
 */
public class Invoicing extends javax.swing.JFrame {
    String[] columm = new String[]{"Pet/Product ID","Pet/Product Name","Amount","Price"};
    DefaultTableModel table = new DefaultTableModel();
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    float productprice = 0;
    float dummy = 0;
    float totalprice = 0;
    InvoiceDAO invoiceDATA = new InvoiceDAO();

    /**
     * Creates new form Invoice
     */
    public Invoicing() {
        initComponents();
        addStaffId();
        addCustomerId();
        addProductId();
        addPetId();
        InvoiceTable.setModel(table);
        table.setColumnIdentifiers(columm);
    }
    public void addStaffId(){
    StaffDAO staffDATA = new StaffDAO();
    ArrayList<Staff> list = staffDATA.getAll();
    for(Staff st : list){
    staffidcbiv.addItem(st.getId());
    }
    }
    public void fillStaffName(){
    StaffDAO staffDATA = new StaffDAO();
    if(staffidcbiv.getSelectedItem().equals("Select")){
       staffnametxt.setText("");
    }else{
    ArrayList<Staff> list = staffDATA.getbyID(String.valueOf(staffidcbiv.getSelectedItem()));
    staffnametxt.setText(list.get(0).getName());
    }
    }
    public void addCustomerId(){
    CustomersDAO cusDATA = new CustomersDAO();
    ArrayList<Customers> list = cusDATA.getAll();
    for(Customers st : list){
    customeridcbiv.addItem(st.getCustomerCCCD());
    }
    }
    public void fillCustomerName(){
    if(customeridcbiv.getSelectedItem().equals("Select")){
     customernametxt.setText("");
    }else{
     CustomersDAO cusDATA = new CustomersDAO();
    ArrayList<Customers> list = cusDATA.getbyID(String.valueOf(customeridcbiv.getSelectedItem()));
    customernametxt.setText(list.get(0).getCustomerName());
    }
    }
    public void addProductId(){
    PetProductDAO productDATA = new PetProductDAO();
    ArrayList<PetProduct> list = productDATA.getAll();
    for(PetProduct pp : list){
    productidcbiv.addItem(pp.getProduct_ID());
    }
    }
    public void fillProductDATA(){
    if(productidcbiv.getSelectedItem().equals("Select")){
    productnameivtxt.setText("");
    }else{
     PetProductDAO productDATA = new PetProductDAO();
     ArrayList<PetProduct> list = productDATA.getbyID(String.valueOf(productidcbiv.getSelectedItem()));
    productnameivtxt.setText(list.get(0).getProduct_Name());
    productprice = list.get(0).getPrice_sell();
    }}
    public void addPetId(){
    PetDAO PetDATA = new PetDAO();
    ArrayList<Pet> list = PetDATA.getAll();
    for(Pet p : list){
    petidcbiv.addItem(p.getPet_ID());
    }
    }
    public void fillPetName(){
    if(petidcbiv.getSelectedItem().equals("Select")){
    petnameivtxt.setText("");
    pettypeivtxt.setText("");
    petpriceivtxt.setText("");
    }else{
    PetDAO PetDATA = new PetDAO();
    ArrayList<Pet> list = PetDATA.getbyID(String.valueOf(petidcbiv.getSelectedItem()));
    petnameivtxt.setText(list.get(0).getPet_Name());
    pettypeivtxt.setText(list.get(0).getPet_Type());
    petpriceivtxt.setText(String.valueOf(list.get(0).getPrice()));
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        staffnametxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        staffidcbiv = new javax.swing.JComboBox<>();
        customeridcbiv = new javax.swing.JComboBox<>();
        customernametxt = new javax.swing.JTextField();
        invoiceidtxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        refreshiv = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        productidcbiv = new javax.swing.JComboBox<>();
        productnameivtxt = new javax.swing.JTextField();
        amountivtxt = new javax.swing.JFormattedTextField();
        productpriceivtxt = new javax.swing.JFormattedTextField();
        pettypeivtxt = new javax.swing.JTextField();
        petidcbiv = new javax.swing.JComboBox<>();
        petnameivtxt = new javax.swing.JTextField();
        petpriceivtxt = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        InvoiceTable = new javax.swing.JTable();
        Add = new javax.swing.JButton();
        print = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        totalcosttxt = new javax.swing.JTextField();
        DeleteItem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("StaffID");

        jLabel2.setText("CustomerID");

        jLabel3.setText("StaffName");

        staffnametxt.setEditable(false);

        jLabel4.setText("CustomerName");

        staffidcbiv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        staffidcbiv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                staffidcbivItemStateChanged(evt);
            }
        });

        customeridcbiv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        customeridcbiv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                customeridcbivItemStateChanged(evt);
            }
        });

        customernametxt.setEditable(false);

        jLabel5.setText("InvoiceID");

        jLabel6.setText("Date");

        refreshiv.setText("Refresh");
        refreshiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshivActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(invoiceidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(staffidcbiv, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staffnametxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(customeridcbiv, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customernametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshiv)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(refreshiv)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(staffidcbiv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customeridcbiv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoiceidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customernametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(staffnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLabel7.setText("ProductName");

        jLabel8.setText("Amount");

        jLabel9.setText("PetName");

        jLabel10.setText("PetType");

        jLabel11.setText("ProductID");

        jLabel12.setText("PetID");

        jLabel14.setText("Price");

        jLabel15.setText("Price");

        productidcbiv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        productidcbiv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                productidcbivItemStateChanged(evt);
            }
        });

        productnameivtxt.setEditable(false);

        amountivtxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        amountivtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amountivtxtKeyReleased(evt);
            }
        });

        productpriceivtxt.setEditable(false);

        pettypeivtxt.setEditable(false);

        petidcbiv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        petidcbiv.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                petidcbivItemStateChanged(evt);
            }
        });

        petnameivtxt.setEditable(false);

        petpriceivtxt.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(petidcbiv, 0, 152, Short.MAX_VALUE)
                    .addComponent(productidcbiv, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(59, 59, 59)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(productnameivtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(petnameivtxt))
                .addGap(59, 59, 59)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(pettypeivtxt))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(amountivtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(productpriceivtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(petpriceivtxt))
                .addGap(17, 17, 17))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel14)
                    .addComponent(productidcbiv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productnameivtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amountivtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productpriceivtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel15)
                    .addComponent(pettypeivtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(petidcbiv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(petnameivtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(petpriceivtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        InvoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(InvoiceTable);

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        jLabel13.setText("Total Price");

        totalcosttxt.setEditable(false);

        DeleteItem.setText("Delete");
        DeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(202, 202, 202)
                .addComponent(DeleteItem)
                .addGap(18, 18, 18)
                .addComponent(Add)
                .addGap(31, 31, 31)
                .addComponent(Save)
                .addGap(31, 31, 31)
                .addComponent(print)
                .addGap(96, 96, 96)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalcosttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DeleteItem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(totalcosttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)))
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void staffidcbivItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_staffidcbivItemStateChanged
        fillStaffName();
    }//GEN-LAST:event_staffidcbivItemStateChanged

    private void customeridcbivItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_customeridcbivItemStateChanged
        fillCustomerName();
    }//GEN-LAST:event_customeridcbivItemStateChanged

    private void productidcbivItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_productidcbivItemStateChanged

        fillProductDATA();
        amountivtxt.setText("");
        productpriceivtxt.setText("");

    }//GEN-LAST:event_productidcbivItemStateChanged

    private void petidcbivItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_petidcbivItemStateChanged
        fillPetName();
    }//GEN-LAST:event_petidcbivItemStateChanged

    private void amountivtxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountivtxtKeyReleased
        int amount;
        if(amountivtxt.getText().isBlank()){
           amount = 0;
           productpriceivtxt.setText(String.valueOf(amount * productprice));
        }else {
           amount = Integer.parseInt(amountivtxt.getText());
           productpriceivtxt.setText(String.valueOf(amount * productprice));
        }
    }//GEN-LAST:event_amountivtxtKeyReleased

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        
        if(!productidcbiv.getSelectedItem().equals("Select")){
        PetProductDAO productDATA = new PetProductDAO();
        ArrayList<PetProduct> listp = productDATA.getbyID(String.valueOf(productidcbiv.getSelectedItem()));
        if(amountivtxt.getText().isBlank()){
            JOptionPane.showMessageDialog(rootPane, "Please enter the amount");
            return;
        }else if(listp.get(0).getStock() - Integer.parseInt(amountivtxt.getText()) < 0 || listp.get(0).getStock() == 0){
            JOptionPane.showMessageDialog(rootPane, "Out of stock");
        }else{
        table.addRow(new String[]{String.valueOf(productidcbiv.getSelectedItem()),
            String.valueOf(listp.get(0).getProduct_Name()),amountivtxt.getText(),productpriceivtxt.getText()});
        dummy += Float.parseFloat(productpriceivtxt.getText());
        totalcosttxt.setText(String.valueOf(dummy));
        }
        }if(!petidcbiv.getSelectedItem().equals("Select")){
        PetDAO petDATA = new PetDAO();
        ArrayList<Pet> listp = petDATA.getbyID(String.valueOf(petidcbiv.getSelectedItem()));
        table.addRow(new String[] {String.valueOf(petidcbiv.getSelectedItem()),
            String.valueOf(listp.get(0).getPet_Name()),"1",petpriceivtxt.getText()});
        dummy += Float.parseFloat(petpriceivtxt.getText());
        totalcosttxt.setText(String.valueOf(dummy));
        }else if(!petidcbiv.getSelectedItem().equals("Select") && !productidcbiv.getSelectedItem().equals("Select")){
            JOptionPane.showMessageDialog(rootPane, "Please choose your item or pet before add");
        }
    }//GEN-LAST:event_AddActionPerformed

    private void refreshivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshivActionPerformed
        invoiceidtxt.setText("");
        productidcbiv.setSelectedIndex(0);
        petidcbiv.setSelectedIndex(0);
        customeridcbiv.setSelectedIndex(0);
        staffidcbiv.setSelectedIndex(0);
        productnameivtxt.setText("");
        staffnametxt.setText("");
        petnameivtxt.setText("");
        pettypeivtxt.setText("");
        petpriceivtxt.setText("");
        table.setRowCount(0);
        totalcosttxt.setText("");
    }//GEN-LAST:event_refreshivActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
       try {
            if(invoiceidtxt.getText().isBlank() ||
            customeridcbiv.getSelectedItem().equals("Select") ||
            staffidcbiv.getSelectedItem().equals("Select") || table.getRowCount() == 0){
               JOptionPane.showMessageDialog(this, "Missing information to save");
            }
            int result = 0;
            Detail_InvoiceDAO diDATA = new Detail_InvoiceDAO();
            InvoiceDAO ivDATA = new InvoiceDAO();
            String InvoiceID = invoiceidtxt.getText();
            if(!ivDATA.getbyID(invoiceidtxt.getText()).isEmpty()){
                JOptionPane.showMessageDialog(this, "ID has already used");
                return;
            }else{
            String DateValue = dateFormat.format(date.getDate());
            Date day = dateFormat.parse(DateValue);
            String StaffID  = String.valueOf(staffidcbiv.getSelectedItem());
            String CustomerID = String.valueOf(customeridcbiv.getSelectedItem());
            float Totalcost = Float.parseFloat(totalcosttxt.getText());
            Invoice iv = new Invoice(InvoiceID,StaffID,CustomerID,day, Totalcost);
            result += ivDATA.insert(iv);
            for(int i = 0 ; i < table.getRowCount(); i++){
            PetDAO petDATA = new PetDAO();
            PetProductDAO productDATA = new PetProductDAO();
            ArrayList<Pet> pet = petDATA.getbyID(String.valueOf(table.getValueAt(i, 0)));
            ArrayList<PetProduct> product = productDATA.getbyID(String.valueOf(table.getValueAt(i,0)));
            if(pet.isEmpty()){
               String ProductID = product.get(0).getProduct_ID();
               int amount = Integer.parseInt(String.valueOf(table.getValueAt(i, 2)));
               product.get(0).setStock(product.get(0).getStock() - amount);
               productDATA.update(product.get(0));
               float price = Float.parseFloat(String.valueOf(table.getValueAt(i, 3)));
               Detail_Invoice di = new Detail_Invoice(InvoiceID,ProductID,null,amount,price);
               result += diDATA.insert(di);
            }else if(product.isEmpty()){
               String PetID = pet.get(0).getPet_ID();
               int amount = 1;
               petDATA.delete(PetID);
               float price = Float.parseFloat(String.valueOf(table.getValueAt(i, 3)));
               Detail_Invoice di = new Detail_Invoice(InvoiceID,null,PetID,amount,price);
               result += diDATA.insert(di);
            }
            }
            if(!(result == table.getRowCount()+1)){
                JOptionPane.showMessageDialog(this, "Save Failed!!");
                System.out.println(result);
            }else 
            {
                JOptionPane.showMessageDialog(this, "Save Successful!!");
                totalprice = dummy;
                dummy = 0;
            }
            }
            }catch (ParseException ex) {
                Logger.getLogger(CustomersForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_SaveActionPerformed

    private void DeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteItemActionPerformed
        int row = InvoiceTable.getSelectedRow();
        dummy = dummy - Float.parseFloat(String.valueOf(table.getValueAt(row, 3)));
        totalcosttxt.setText(String.valueOf(dummy));
        table.removeRow(row);
    }//GEN-LAST:event_DeleteItemActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        try{
        HSSFWorkbook workbook = new HSSFWorkbook();
        HSSFSheet sheet = workbook.createSheet("Invoice");
        HSSFRow row = null;
        Cell cell = null;
        row = sheet.createRow(0);
        cell = row.createCell(0,CellType.STRING);
        cell.setCellValue("Staff Name ");
        cell = row.createCell(1,CellType.STRING);
        cell.setCellValue(staffnametxt.getText());
        row = sheet.createRow(1);
        cell =row.createCell(0,CellType.STRING);
        cell.setCellValue("Customer Name ");
        cell =row.createCell(1,CellType.STRING);
        cell.setCellValue(customernametxt.getText());
        row = sheet.createRow(2);
        cell = row.createCell(2,CellType.STRING);
        cell.setCellValue("INVOICE");
        row = sheet.createRow (3);
        cell = row.createCell(0, CellType.STRING);
        cell.setCellValue("STT");
        cell = row.createCell(1, CellType.STRING);
        cell.setCellValue("ID");
        cell = row.createCell(2, CellType.STRING);
        cell.setCellValue("Name");
        cell = row.createCell(3, CellType.STRING);
        cell.setCellValue("Amount");
        cell = row.createCell(4, CellType.STRING);
        cell.setCellValue("Price");
        int i;
        for(i = 0 ; i < table.getRowCount(); i++){
            row = sheet.createRow(4+i);
            cell = row.createCell(0, CellType.NUMERIC);
            cell.setCellValue(i+1);
            cell = row.createCell(1,CellType.STRING);
            cell.setCellValue(String.valueOf(table.getValueAt(i, 0)));
            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue(String.valueOf(table.getValueAt(i, 1)));
            cell = row.createCell(3, CellType.NUMERIC);
            cell.setCellValue(Integer.parseInt(String.valueOf(table.getValueAt(i, 2))));
            cell = row.createCell(4, CellType.NUMERIC);
            cell.setCellValue(Float.parseFloat(String.valueOf(table.getValueAt(i, 3))));
        }
        row = sheet.createRow(4+i+1);
        cell = row.createCell(0,CellType.STRING);
        cell.setCellValue("Date");
        cell = row.createCell(1,CellType.STRING);
        cell.setCellValue(dateFormat.format(date.getDate()));
        cell = row.createCell(3,CellType.STRING);
        cell.setCellValue("Total");
        cell = row.createCell(4,CellType.NUMERIC);
        cell.setCellValue(totalprice);
        
        File f = new File("C:\\Users\\84896\\Desktop\\EXEL\\Invoice" + invoiceidtxt.getText() +".xls");
        try{
            FileOutputStream fos = new FileOutputStream(f);
            workbook.write(fos);
            fos.close();
        }catch(FileNotFoundException ex){
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        JOptionPane.showMessageDialog(rootPane, "Print Success");
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error");
        }
    }//GEN-LAST:event_printActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Invoicing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Invoicing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Invoicing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Invoicing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Invoicing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton DeleteItem;
    private javax.swing.JTable InvoiceTable;
    private javax.swing.JButton Save;
    private javax.swing.JFormattedTextField amountivtxt;
    private javax.swing.JComboBox<String> customeridcbiv;
    private javax.swing.JTextField customernametxt;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JTextField invoiceidtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> petidcbiv;
    private javax.swing.JTextField petnameivtxt;
    private javax.swing.JFormattedTextField petpriceivtxt;
    private javax.swing.JTextField pettypeivtxt;
    private javax.swing.JButton print;
    private javax.swing.JComboBox<String> productidcbiv;
    private javax.swing.JTextField productnameivtxt;
    private javax.swing.JFormattedTextField productpriceivtxt;
    private javax.swing.JButton refreshiv;
    private javax.swing.JComboBox<String> staffidcbiv;
    private javax.swing.JTextField staffnametxt;
    private javax.swing.JTextField totalcosttxt;
    // End of variables declaration//GEN-END:variables
}
